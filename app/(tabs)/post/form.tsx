import Button from "@/components/button";
import { router } from "expo-router";
import React from "react";
import {
  Alert,
  Dimensions,
  Image,
  KeyboardAvoidingView,
  Platform,
  ScrollView,
  StyleSheet,
  Text,
  TextInput,
  TouchableOpacity,
  View,
} from "react-native";
import { usePostContext } from "./_layout";

const { width } = Dimensions.get("window");

const badgeOptions = [
  "Recycling ‚ôªÔ∏è",
  "Public transport üöå",
  "Planting tree üå≥",
  "Solar energy ‚òÄÔ∏è",
  "Water conservation üíß",
  "Composting üå±",
  "Bike riding üö¥‚Äç‚ôÇÔ∏è",
  "Energy saving üí°",
];

export default function PostFormScreen() {
  const { photo, title, setTitle, desc, setDesc, badgeText, setBadgeText } =
    usePostContext();

  if (!photo) {
    return (
      <View style={styles.container}>
        <View style={styles.noPhotoContainer}>
          <Text style={styles.noPhotoText}>üì∏ Please take a photo first</Text>
          <TouchableOpacity
            style={styles.goBackButton}
            onPress={() => router.back()}
          >
            <Text style={styles.goBackButtonText}>‚Üê Go Back</Text>
          </TouchableOpacity>
        </View>
      </View>
    );
  }

  const handleNext = () => {
    if (!title.trim()) {
      Alert.alert("Validation Error", "Please enter a title for your post");
      return;
    }
    if (!desc.trim()) {
      Alert.alert(
        "Validation Error",
        "Please enter a description for your post"
      );
      return;
    }

    router.push("/post/preview");
  };

  return (
    <KeyboardAvoidingView
      style={styles.container}
      behavior={Platform.OS === "ios" ? "padding" : "height"}
      keyboardVerticalOffset={Platform.OS === "ios" ? 90 : 0}
    >
      <ScrollView
        style={styles.scrollContainer}
        showsVerticalScrollIndicator={false}
      >
        <View style={styles.formContainer}>
          {/* Photo Preview Section */}
          <View style={styles.photoContainer}>
            <View style={styles.photoFrame}>
              <Image source={{ uri: photo }} style={styles.photoPreview} />
            </View>
          </View>

          {/* Form Fields */}
          <View style={styles.fieldsContainer}>
            <View style={styles.inputContainer}>
              <View style={styles.labelRow}>
                <Text style={styles.label}>Post Title *</Text>
                <Text style={styles.charCount}>{title.length}/100</Text>
              </View>
              <TextInput
                style={styles.input}
                placeholder="Enter post title"
                placeholderTextColor="#999"
                value={title}
                onChangeText={setTitle}
                maxLength={100}
              />
            </View>

            <View style={styles.inputContainer}>
              <View style={styles.labelRow}>
                <Text style={styles.label}>Description *</Text>
                <Text style={styles.charCount}>{desc.length}/500</Text>
              </View>
              <TextInput
                style={[styles.input, styles.textArea]}
                placeholder="Describe your environmental action..."
                placeholderTextColor="#999"
                value={desc}
                onChangeText={setDesc}
                multiline
                numberOfLines={4}
                maxLength={500}
              />
            </View>

            <View style={styles.badgeContainer}>
              <Text style={styles.label}>Activity Type</Text>
              <ScrollView horizontal showsHorizontalScrollIndicator={false}>
                <View style={styles.badgeRow}>
                  {badgeOptions.map((badge) => (
                    <TouchableOpacity
                      key={badge}
                      style={[
                        styles.badgeOption,
                        badgeText === badge && styles.selectedBadge,
                      ]}
                      onPress={() => setBadgeText(badge)}
                      activeOpacity={0.7}
                    >
                      <Text
                        style={[
                          styles.badgeOptionText,
                          badgeText === badge && styles.selectedBadgeText,
                        ]}
                      >
                        {badge}
                      </Text>
                    </TouchableOpacity>
                  ))}
                </View>
              </ScrollView>
              <Text style={styles.aiNote}>
                *This will be generated by AI in production app
              </Text>
            </View>

            <Button
              title="Next"
              onPress={handleNext}
              variant="primary"
              disabled={!title || !desc}
              style={{
                marginTop: 20,
                marginBottom: 100,
              }}
            />
          </View>
        </View>
      </ScrollView>
    </KeyboardAvoidingView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#f8fafc",
  },
  scrollContainer: {
    flex: 1,
  },
  formContainer: {
    flex: 1,
  },
  photoContainer: {
    alignItems: "center",
    paddingVertical: 30,
    paddingHorizontal: 20,
    backgroundColor: "#ffffff",
    marginBottom: 20,
  },
  photoFrame: {
    borderRadius: 20,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 8 },
    shadowOpacity: 0.15,
    shadowRadius: 20,
    elevation: 12,
  },
  photoPreview: {
    width: width * 0.85,
    height: (width * 0.85 * 3) / 4, // 4:3 vertical ratio
    borderRadius: 20,
    resizeMode: "cover",
    backgroundColor: "#f0f0f0",
  },
  fieldsContainer: {
    backgroundColor: "#ffffff",
    borderTopLeftRadius: 25,
    borderTopRightRadius: 25,
    paddingTop: 30,
    paddingHorizontal: 20,
    paddingBottom: 40,
    marginTop: -15,
  },
  inputContainer: {
    marginBottom: 25,
  },
  labelRow: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 12,
  },
  label: {
    fontSize: 17,
    fontWeight: "700",
    color: "#1f2937",
    letterSpacing: -0.2,
    marginBottom: 8,
  },
  charCount: {
    fontSize: 13,
    color: "#6b7280",
    fontWeight: "500",
  },
  input: {
    borderWidth: 2,
    borderColor: "#e5e7eb",
    borderRadius: 16,
    padding: 18,
    fontSize: 16,
    backgroundColor: "#ffffff",
    color: "#1f2937",
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 8,
    elevation: 2,
  },
  textArea: {
    height: 120,
    textAlignVertical: "top",
    paddingTop: 18,
  },
  badgeContainer: {
    marginBottom: 10,
  },
  badgeRow: {
    flexDirection: "row",
    paddingLeft: 2,
  },
  badgeOption: {
    backgroundColor: "#f3f4f6",
    borderRadius: 25,
    paddingHorizontal: 20,
    paddingVertical: 12,
    marginRight: 12,
    borderWidth: 2,
    borderColor: "#e5e7eb",
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
  },
  selectedBadge: {
    backgroundColor: "#22c55e",
    borderColor: "#16a34a",
    shadowColor: "#22c55e",
    shadowOpacity: 0.3,
  },
  badgeOptionText: {
    fontSize: 14,
    fontWeight: "600",
    color: "#4b5563",
  },
  selectedBadgeText: {
    color: "#ffffff",
    fontWeight: "700",
  },
  aiNote: {
    fontSize: 12,
    color: "#9ca3af",
    marginTop: 8,
    fontStyle: "italic",
  },
  noPhotoContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    paddingHorizontal: 40,
  },
  noPhotoText: {
    textAlign: "center",
    fontSize: 20,
    color: "#6b7280",
    marginBottom: 40,
    fontWeight: "600",
    lineHeight: 28,
  },
  goBackButton: {
    backgroundColor: "#6b7280",
    borderRadius: 20,
    paddingVertical: 16,
    paddingHorizontal: 40,
    shadowColor: "#6b7280",
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 8,
    elevation: 5,
  },
  goBackButtonText: {
    color: "#ffffff",
    fontSize: 16,
    fontWeight: "700",
  },
});
